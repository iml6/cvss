from cveUtilities import *
import joblib

def predict_cve(cve_description):
    X_emb = embedder.encode([cve_description])
    y_pred = clf.predict(X_emb)[0]
    return {
        "attack_vector": y_pred[0],
        "availability": y_pred[1],
        "integrity": y_pred[2],
        "integrity": y_pred[3]
    }

# --- Later: Load and predict ---
embedder, clf  = joblib.load("cve_attack_vector_model_lightgbm.pkl")

filelist="cve-list-with-cvss-08022025-2025.dat"

items = get_training_items(filelist)

correct=0
wrong=0

for item in items:
    # Get top prediction and its confidence
    prediction = predict_cve(item.description)

    if item.av == "Local" or item.av=="Physical":
        if item.av == prediction["attack_vector"]:
            correct +=1
        else:
            print(f"From CVSS: {item.av}")
            print(f"From Desc: {prediction["attack_vector"]}")
            wrong += 1

print(correct)
print(wrong)